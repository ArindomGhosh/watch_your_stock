// Mocks generated by Mockito 5.0.16 from annotations
// in watch_my_stock/test/domain/stock/stock_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:watch_my_stock/data/remote/responses/stock.dart' as _i4;
import 'package:watch_my_stock/data/repos/i_stock_repo.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [IStockRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockIStockRepo extends _i1.Mock implements _i2.IStockRepo {
  MockIStockRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Stock>> getAllStocks() =>
      (super.noSuchMethod(Invocation.method(#getAllStocks, []),
              returnValue: Future<List<_i4.Stock>>.value(<_i4.Stock>[]))
          as _i3.Future<List<_i4.Stock>>);
  @override
  _i3.Future<int> getStockPriceFor(_i4.Stock? stock) =>
      (super.noSuchMethod(Invocation.method(#getStockPriceFor, [stock]),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  String toString() => super.toString();
}
